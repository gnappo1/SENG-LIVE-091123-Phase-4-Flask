"""many to many

Revision ID: b70dea209ea1
Revises: 41175acedfee
Create Date: 2023-11-14 08:32:49.920465

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b70dea209ea1'
down_revision: Union[str, None] = '41175acedfee'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pet_owners',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['owners.id'], name=op.f('fk_pet_owners_owner_id_owners')),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], name=op.f('fk_pet_owners_pet_id_pets')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_pet_owners'))
    )
    with op.batch_alter_table('pets', schema=None) as batch_op:
        batch_op.drop_constraint('fk_pets_owner_id_owners', type_='foreignkey')
        batch_op.drop_column('owner_id')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('pets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key('fk_pets_owner_id_owners', 'owners', ['owner_id'], ['id'])

    op.drop_table('pet_owners')
    # ### end Alembic commands ###
